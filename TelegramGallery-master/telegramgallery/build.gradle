apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
tasks.withType(Javadoc) {
    enabled = false //Disable the task of 'generating javadoc'
    options.encoding = "UTF-8"
}
ext {
    bintrayRepo = 'maven'
    bintrayName = 'telegramgallery' //maven package name

    publishedGroupId = 'com.library.tangxiaolv'
    libraryName = 'telegramgallery'
    artifact = 'telegramgallery'//Must be the same as the Model name

    libraryDescription = 'android Gallery from Telegram'

    siteUrl = 'https://github.com/TangXiaoLv/TelegramGallery'
    gitUrl = 'https://github.com/TangXiaoLv/TelegramGallery.git'

    libraryVersion = '1.0.4'

    developerId = 'tangxiaolv'
    developerName = 'Tang XiaoLv'
    developerEmail = 'imbatang@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}
android {
    compileSdkVersion 25
    buildToolsVersion '23.0.3'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        ndk {
            abiFilters 'armeabi'//,'x86'//, 'armeabi-v7a'//, 'x86'//, 'x86_6 4', 'arm64-v8a'
        }

        externalNativeBuild {
            cmake {
                cFlags "-std=c11"
                cppFlags "-std=c++11 -frtti -fexceptions"
                arguments "-DANDROID_STL=gnustl_static"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    publishNonDefault true
    externalNativeBuild {
        cmake {
            //path 'src/main/cpp/CMakeLists.txt'
        }

        ndkBuild {
            //path 'src/main/jni/Android.mk'
        }
    }

    sourceSets.main {
        jni.srcDirs = []
        jniLibs.srcDir 'src/main/libs'
    }
}

dependencies {
    compile 'com.library.tangxiaolv:telegramgallery:1.0.1'
}

// Place it at the end of the file
apply plugin: 'com.github.dcendents.android-maven'

group = publishedGroupId                               // Maven Group ID for the artifact

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}